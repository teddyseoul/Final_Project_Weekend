<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AfterMapper">
	<insert id="setWrite" parameterType="AfterDTO">
		INSERT INTO AFTER(ANUM, NUM, WRITER, TITLE, CONTENTS, REG_DATE, HIT, POINT, REF, STEP, DEPTH)
		VALUES(#{anum}, #{num}, #{writer}, #{title}, #{contents}, sysdate, 0, #{point}, 0, 0, 0)
	</insert>
	<delete id="setDelete" parameterType="String">
		DELETE AFTER WHERE ANUM = #{num}
	</delete>
	<delete id="setDeleteAll" parameterType="String">
		DELETE AFTER WHERE NUM = #{num}
	</delete>
	<update id="setUpdate" parameterType="AfterDTO">
		UPDATE AFTER SET TITLE = #{title}, CONTENTS = #{contents}, POINT = #{point} WHERE ANUM = #{anum}
	</update>
	<select id="getNum" resultType="Integer">
		select after_seq.nextval from dual
	</select>
	<select id="getSelect" parameterType="String" resultMap="afterResult">
		SELECT * FROM AFTER FULL JOIN FILES ON(AFTER.ANUM = FILES.NUM) WHERE AFTER.ANUM = #{num}
	</select>
	<update id="setHitUpdate" parameterType="String">
		UPDATE AFTER SET HIT = HIT + 1 WHERE ANUM = #{anum}
	</update>
	<!-- ================================================================= -->
	<select id="getCount" resultType="Integer" parameterType="PageMaker">
		SELECT COUNT(ANUM) FROM AFTER WHERE 
		<choose>
			<when test="kind = 1">
				TITLE
			</when>
			<when test="kind = 2">
				CONTENTS
			</when>
			<when test="kind = 3">
				WRITER
			</when>
			<otherwise>
				TITLE
			</otherwise>
		</choose>
		LIKE '%'||#{search}||'%' 
		AND NUM = #{num}
	</select>
	
		<select id="getCountAll" resultType="Integer" parameterType="PageMaker">
		SELECT COUNT(ANUM) FROM AFTER WHERE 
		<choose>
			<when test="kind = 1">
				TITLE
			</when>
			<when test="kind = 2">
				CONTENTS
			</when>
			<when test="kind = 3">
				WRITER
			</when>
			<otherwise>
				TITLE
			</otherwise>
		</choose>
		LIKE '%'||#{search}||'%'
	</select>
	
	
	<select id="getList" parameterType="PageMaker" resultMap="afterResult">
		SELECT * FROM
		(SELECT ROWNUM R, A.* FROM 
		(SELECT * FROM AFTER WHERE 
		<choose>
			<when test="kind = 1">
				TITLE
			</when>
			<when test="kind = 2">
				CONTENTS
			</when>
			<when test="kind = 3">
				WRITER
			</when>
			<otherwise>
				TITLE
			</otherwise>
		</choose>
		LIKE '%'||#{search}||'%'
		 AND NUM = #{num}
		ORDER BY REG_DATE DESC) A)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<select id="getAllList" parameterType="PageMaker" resultMap="afterResult">
		SELECT * FROM
		(SELECT ROWNUM R, A.* FROM 
		(SELECT * FROM AFTER WHERE 
		<choose>
			<when test="kind = 1">
				TITLE
			</when>
			<when test="kind = 2">
				CONTENTS
			</when>
			<when test="kind = 3">
				WRITER
			</when>
			<otherwise>
				TITLE
			</otherwise>
		</choose>
		LIKE '%'||#{search}||'%'
		and(select categroy from festi where (select num from after where anum = #{anum}))
		ORDER BY REG_DATE DESC) A)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
	</select>
	<!-- 상혁 -->
	<!-- 축제/ 공연 리스트 -->
	
	<!-- 후기 리스트 -->
	<select id="getAfterList" parameterType="PageMaker" resultMap="afterResult">
		select a.*, f.title from after a join festi f on f.category = 1 where 
		<choose>
			<when test="1">
				title
			</when>
			<when test="2">
				contents
			</when>
			<when test="2">
				writer
			</when>
			<otherwise>
				like '%'||#{search}||'%'
			</otherwise>
		</choose>
		a.num = f.num order by anum desc
	</select>
	<!-- 상혁 끝 -->
	<resultMap type="AfterDTO" id="afterResult">
		<id column="anum" property="anum"/>
		<result column="num" property="num"/>
		<result column="writer" property="writer"/>
		<result column="title" property="title"/>
		<result column="contents" property="contents"/>
		<result column="reg_date" property="reg_date"/>
		<result column="hit" property="hit"/>
		<result column="point" property="point"/>
		<result column="ref" property="ref"/>
		<result column="step" property="step"/>
		<result column="depth" property="depth"/>
		<collection property="fileDTOs" javaType="List" ofType="FileDTO">
			<id column="fnum" property="fnum"/>
			<result column="num" property="num"/>
			<result column="fname" property="fname"/>
			<result column="oname" property="oname"/>
		</collection>
	</resultMap>
</mapper>